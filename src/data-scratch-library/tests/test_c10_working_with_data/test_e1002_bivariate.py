# Test functions
from dsl.c06_probability.e0603_normal import random_normal


def test_random_normal_distribution(samples: int = 1000, tolerance: float = 0.1):
    """
    Tests whether the random samples generated by random_normal follow 
    the properties of a standard normal distribution.

    Args:
        samples (int): Number of samples to generate.
        tolerance (float): Allowed deviation for mean and standard deviation checks.
    """
    # Generate many samples
    generated_samples = [random_normal() for _ in range(samples)]

    # Calculate mean and standard deviation of the generated samples
    sample_mean = sum(generated_samples) / samples
    sample_variance = sum((x - sample_mean) ** 2 for x in generated_samples) / samples
    sample_stddev = sample_variance ** 0.5

    # Check if mean and stddev are close to 0 and 1 respectively
    assert abs(sample_mean) < tolerance, f"Mean too far from 0: {sample_mean}"
    assert abs(sample_stddev - 1) < tolerance, f"Stddev too far from 1: {sample_stddev}"

    print("random_normal distribution test passed!")


