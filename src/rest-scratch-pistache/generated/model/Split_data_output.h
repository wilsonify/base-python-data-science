/**
* Minimal Pistache
* This is a sample server
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * Split_data_output.h
 *
 * 
 */

#ifndef Split_data_output_H_
#define Split_data_output_H_


#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  Split_data_output
{
public:
    Split_data_output();
    virtual ~Split_data_output() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const Split_data_output& rhs) const;
    bool operator!=(const Split_data_output& rhs) const;

    /////////////////////////////////////////////
    /// Split_data_output members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::vector<double>> getTrain() const;
    void setTrain(std::vector<std::vector<double>> const& value);
    bool trainIsSet() const;
    void unsetTrain();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::vector<double>> getTest() const;
    void setTest(std::vector<std::vector<double>> const& value);
    bool testIsSet() const;
    void unsetTest();

    friend void to_json(nlohmann::json& j, const Split_data_output& o);
    friend void from_json(const nlohmann::json& j, Split_data_output& o);
protected:
    std::vector<std::vector<double>> m_Train;
    bool m_TrainIsSet;
    std::vector<std::vector<double>> m_Test;
    bool m_TestIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* Split_data_output_H_ */
