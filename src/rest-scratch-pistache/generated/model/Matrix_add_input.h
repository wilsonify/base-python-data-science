/**
* Minimal Pistache
* This is a sample server
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * Matrix_add_input.h
 *
 * 
 */

#ifndef Matrix_add_input_H_
#define Matrix_add_input_H_


#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  Matrix_add_input
{
public:
    Matrix_add_input();
    virtual ~Matrix_add_input() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const Matrix_add_input& rhs) const;
    bool operator!=(const Matrix_add_input& rhs) const;

    /////////////////////////////////////////////
    /// Matrix_add_input members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::vector<double>> getMat1() const;
    void setMat1(std::vector<std::vector<double>> const& value);
    bool mat1IsSet() const;
    void unsetMat1();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::vector<double>> getMat2() const;
    void setMat2(std::vector<std::vector<double>> const& value);
    bool mat2IsSet() const;
    void unsetMat2();

    friend void to_json(nlohmann::json& j, const Matrix_add_input& o);
    friend void from_json(const nlohmann::json& j, Matrix_add_input& o);
protected:
    std::vector<std::vector<double>> m_Mat1;
    bool m_Mat1IsSet;
    std::vector<std::vector<double>> m_Mat2;
    bool m_Mat2IsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* Matrix_add_input_H_ */
