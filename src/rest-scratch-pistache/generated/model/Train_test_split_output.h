/**
* Minimal Pistache
* This is a sample server
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * Train_test_split_output.h
 *
 * 
 */

#ifndef Train_test_split_output_H_
#define Train_test_split_output_H_


#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  Train_test_split_output
{
public:
    Train_test_split_output();
    virtual ~Train_test_split_output() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const Train_test_split_output& rhs) const;
    bool operator!=(const Train_test_split_output& rhs) const;

    /////////////////////////////////////////////
    /// Train_test_split_output members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::vector<double>> getXTrain() const;
    void setXTrain(std::vector<std::vector<double>> const& value);
    bool xTrainIsSet() const;
    void unsetX_train();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::vector<double>> getXTest() const;
    void setXTest(std::vector<std::vector<double>> const& value);
    bool xTestIsSet() const;
    void unsetX_test();
    /// <summary>
    /// 
    /// </summary>
    std::vector<double> getYTrain() const;
    void setYTrain(std::vector<double> const value);
    bool yTrainIsSet() const;
    void unsetY_train();
    /// <summary>
    /// 
    /// </summary>
    std::vector<double> getYTest() const;
    void setYTest(std::vector<double> const value);
    bool yTestIsSet() const;
    void unsetY_test();

    friend void to_json(nlohmann::json& j, const Train_test_split_output& o);
    friend void from_json(const nlohmann::json& j, Train_test_split_output& o);
protected:
    std::vector<std::vector<double>> m_X_train;
    bool m_X_trainIsSet;
    std::vector<std::vector<double>> m_X_test;
    bool m_X_testIsSet;
    std::vector<double> m_Y_train;
    bool m_Y_trainIsSet;
    std::vector<double> m_Y_test;
    bool m_Y_testIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* Train_test_split_output_H_ */
