# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ShapeOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nrows=None, ncols=None):  # noqa: E501
        """ShapeOutput - a model defined in OpenAPI

        :param nrows: The nrows of this ShapeOutput.  # noqa: E501
        :type nrows: float
        :param ncols: The ncols of this ShapeOutput.  # noqa: E501
        :type ncols: float
        """
        self.openapi_types = {
            'nrows': float,
            'ncols': float
        }

        self.attribute_map = {
            'nrows': 'nrows',
            'ncols': 'ncols'
        }

        self._nrows = nrows
        self._ncols = ncols

    @classmethod
    def from_dict(cls, dikt) -> 'ShapeOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The shape-output of this ShapeOutput.  # noqa: E501
        :rtype: ShapeOutput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nrows(self):
        """Gets the nrows of this ShapeOutput.


        :return: The nrows of this ShapeOutput.
        :rtype: float
        """
        return self._nrows

    @nrows.setter
    def nrows(self, nrows):
        """Sets the nrows of this ShapeOutput.


        :param nrows: The nrows of this ShapeOutput.
        :type nrows: float
        """

        self._nrows = nrows

    @property
    def ncols(self):
        """Gets the ncols of this ShapeOutput.


        :return: The ncols of this ShapeOutput.
        :rtype: float
        """
        return self._ncols

    @ncols.setter
    def ncols(self, ncols):
        """Sets the ncols of this ShapeOutput.


        :param ncols: The ncols of this ShapeOutput.
        :type ncols: float
        """

        self._ncols = ncols
