# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class StrengthOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actual=None, expected=None, strength=None):  # noqa: E501
        """StrengthOutput - a model defined in OpenAPI

        :param actual: The actual of this StrengthOutput.  # noqa: E501
        :type actual: int
        :param expected: The expected of this StrengthOutput.  # noqa: E501
        :type expected: int
        :param strength: The strength of this StrengthOutput.  # noqa: E501
        :type strength: float
        """
        self.openapi_types = {
            'actual': int,
            'expected': int,
            'strength': float
        }

        self.attribute_map = {
            'actual': 'actual',
            'expected': 'expected',
            'strength': 'strength'
        }

        self._actual = actual
        self._expected = expected
        self._strength = strength

    @classmethod
    def from_dict(cls, dikt) -> 'StrengthOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The strength-output of this StrengthOutput.  # noqa: E501
        :rtype: StrengthOutput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actual(self):
        """Gets the actual of this StrengthOutput.


        :return: The actual of this StrengthOutput.
        :rtype: int
        """
        return self._actual

    @actual.setter
    def actual(self, actual):
        """Sets the actual of this StrengthOutput.


        :param actual: The actual of this StrengthOutput.
        :type actual: int
        """

        self._actual = actual

    @property
    def expected(self):
        """Gets the expected of this StrengthOutput.


        :return: The expected of this StrengthOutput.
        :rtype: int
        """
        return self._expected

    @expected.setter
    def expected(self, expected):
        """Sets the expected of this StrengthOutput.


        :param expected: The expected of this StrengthOutput.
        :type expected: int
        """

        self._expected = expected

    @property
    def strength(self):
        """Gets the strength of this StrengthOutput.


        :return: The strength of this StrengthOutput.
        :rtype: float
        """
        return self._strength

    @strength.setter
    def strength(self, strength):
        """Sets the strength of this StrengthOutput.


        :param strength: The strength of this StrengthOutput.
        :type strength: float
        """

        self._strength = strength
