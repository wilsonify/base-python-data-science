# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class BucketizeInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, point=None, bucket_size=None):  # noqa: E501
        """BucketizeInput - a model defined in OpenAPI

        :param point: The point of this BucketizeInput.  # noqa: E501
        :type point: float
        :param bucket_size: The bucket_size of this BucketizeInput.  # noqa: E501
        :type bucket_size: float
        """
        self.openapi_types = {
            'point': float,
            'bucket_size': float
        }

        self.attribute_map = {
            'point': 'point',
            'bucket_size': 'bucket_size'
        }

        self._point = point
        self._bucket_size = bucket_size

    @classmethod
    def from_dict(cls, dikt) -> 'BucketizeInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The bucketize-input of this BucketizeInput.  # noqa: E501
        :rtype: BucketizeInput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def point(self):
        """Gets the point of this BucketizeInput.


        :return: The point of this BucketizeInput.
        :rtype: float
        """
        return self._point

    @point.setter
    def point(self, point):
        """Sets the point of this BucketizeInput.


        :param point: The point of this BucketizeInput.
        :type point: float
        """

        self._point = point

    @property
    def bucket_size(self):
        """Gets the bucket_size of this BucketizeInput.


        :return: The bucket_size of this BucketizeInput.
        :rtype: float
        """
        return self._bucket_size

    @bucket_size.setter
    def bucket_size(self, bucket_size):
        """Sets the bucket_size of this BucketizeInput.


        :param bucket_size: The bucket_size of this BucketizeInput.
        :type bucket_size: float
        """

        self._bucket_size = bucket_size
